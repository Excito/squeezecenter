From: =?UTF-8?q?Carl=20F=C3=BCrstenberg?= <carl@excito.com>
Date: Mon, 21 Mar 2011 13:30:00 +0100
Subject: Remove dbix migration

we take care of the migration at packager level instead of delegating
dynamic updating to squeezeboxserver itself, as it's generally only
decreasing performance and is to little use
---
 Slim/Schema.pm |   72 +-------------------------------------------------------
 1 files changed, 1 insertions(+), 71 deletions(-)

diff --git a/Slim/Schema.pm b/Slim/Schema.pm
index 8dff35e..d19e580 100644
--- a/Slim/Schema.pm
+++ b/Slim/Schema.pm
@@ -27,7 +27,6 @@ use strict;
 
 use base qw(DBIx::Class::Schema);
 
-use DBIx::Migration;
 use Digest::MD5 qw(md5_hex);
 use File::Basename qw(basename dirname);
 use File::Spec::Functions qw(:ALL);
@@ -443,76 +442,7 @@ data files handed to L<DBIx::Migration>.
 =cut
 
 sub migrateDB {
-	my $class = shift;
-	
-	if ( main::SLIM_SERVICE ) {
-		return;
-	}
-
-	my $dbh = $class->storage->dbh;
-	my ($driver, $source, $username, $password) = $class->sourceInformation;
-
-	# Migrate to the latest schema version - see SQL/$driver/schema_\d+_up.sql
-	my $dbix = DBIx::Migration->new({
-		dbh   => $dbh,  
-		dir   => catdir(Slim::Utils::OSDetect::dirsFor('SQL'), $driver),
-		debug => $log->is_debug,
-	});
-	
-	# Hide errors that aren't really errors
-	my $cur_handler = $dbh->{HandleError};
-	my $new_handler = sub {
-		return 1 if $_[0] =~ /no such table/;
-		goto $cur_handler;
-	};
-	
-	local $dbh->{HandleError} = $new_handler;
-
-	my $old = $dbix->version || 0;
-
-	if ($dbix->migrate) {
-
-		my $new = $dbix->version || 0;
-
-		if ( main::INFOLOG && $log->is_info ) {
-			$log->info(sprintf("Connected to database $source - schema version: [%d]", $new));
-		}
-
-		if ($old != $new) {
-
-			if ( $log->is_warn ) {
-				$log->warn(sprintf("Migrated database from schema version: %d to version: %d", $old, $new));
-			}
-
-			return 1;
-
-		}
-
-	} else {
-
-		# this occurs if a user downgrades Squeezebox Server to a version with an older schema and which does not include
-		# the required downgrade sql scripts - attempt to drop and create the database at current schema version
-
-		if ( $log->is_warn ) {
-			$log->warn(sprintf("Unable to downgrade database from schema version: %d - Attempting to recreate database", $old));
-		}
-
-		eval { $class->storage->dbh->do('DROP TABLE IF EXISTS dbix_migration') };
-
-		if ($dbix->migrate) {
-
-			if ( $log->is_warn ) {
-				$log->warn(sprintf("Successfully created database at schema version: %d", $dbix->version));
-			}
-
-			return 1;
-
-		}
-
-		logError(sprintf("Unable to create database - **** You may need to manually delete the database ****", $old));
-
-	}
-
+# Stubbed as we don't want to try migrate the DB
 	return 0;
 }
 
-- 
