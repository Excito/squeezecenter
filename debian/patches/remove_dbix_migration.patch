Author: Carl FÃ¼rstenberg <carl@excito.com>
Description: Remove the DBIx::Migration, as it's not anything we want, 
we take care of the migration at packager level instead
--- squeezecenter.orig/Slim/Schema.pm
+++ squeezecenter/Slim/Schema.pm
@@ -28,7 +28,6 @@
 
 use base qw(DBIx::Class::Schema);
 
-use DBIx::Migration;
 use File::Basename qw(basename dirname);
 use File::Copy qw(move);
 use File::Spec::Functions qw(:ALL);
@@ -450,76 +449,7 @@
 =cut
 
 sub migrateDB {
-	my $class = shift;
-	
-	if ( main::SLIM_SERVICE ) {
-		return;
-	}
-
-	my $dbh = $class->storage->dbh;
-	my ($driver, $source, $username, $password) = $class->sourceInformation;
-
-	# Migrate to the latest schema version - see SQL/$driver/schema_\d+_up.sql
-	my $dbix = DBIx::Migration->new({
-		dbh   => $dbh,  
-		dir   => catdir(Slim::Utils::OSDetect::dirsFor('SQL'), $driver),
-		debug => $log->is_debug,
-	});
-	
-	# Hide errors that aren't really errors
-	my $cur_handler = $dbh->{HandleError};
-	my $new_handler = sub {
-		return 1 if $_[0] =~ /no such table/;
-		goto $cur_handler;
-	};
-	
-	local $dbh->{HandleError} = $new_handler;
-
-	my $old = $dbix->version || 0;
-
-	if ($dbix->migrate) {
-
-		my $new = $dbix->version || 0;
-
-		if ( main::INFOLOG && $log->is_info ) {
-			$log->info(sprintf("Connected to database $source - schema version: [%d]", $new));
-		}
-
-		if ($old != $new) {
-
-			if ( $log->is_warn ) {
-				$log->warn(sprintf("Migrated database from schema version: %d to version: %d", $old, $new));
-			}
-
-			return 1;
-
-		}
-
-	} else {
-
-		# this occurs if a user downgrades Squeezebox Server to a version with an older schema and which does not include
-		# the required downgrade sql scripts - attempt to drop and create the database at current schema version
-
-		if ( $log->is_warn ) {
-			$log->warn(sprintf("Unable to downgrade database from schema version: %d - Attempting to recreate database", $old));
-		}
-
-		eval { $class->storage->dbh->do('DROP TABLE IF EXISTS dbix_migration') };
-
-		if ($dbix->migrate) {
-
-			if ( $log->is_warn ) {
-				$log->warn(sprintf("Successfully created database at schema version: %d", $dbix->version));
-			}
-
-			return 1;
-
-		}
-
-		logError(sprintf("Unable to create database - **** You may need to manually delete the database ****", $old));
-
-	}
-
+# Stubbed as we don't want to try migrate the DB
 	return 0;
 }
 
